name: Release

on:
  push:
    tags:
      - 'v*'
env:
  # Stop wasting time caching packages
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  # Disable sending usage data to Microsoft
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_NOLOGO: true    
jobs:
  release:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
    - name: Add Nuget Feed
      run:  dotnet nuget add source ${{ secrets.GITHUBNUGETURL }} -n github -u ${{ secrets.GITHUBUSER }} -p ${{ secrets.GITHUBREADPACKAGES }} --store-password-in-clear-text  
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-1
    - name: AWS CLI
      run: dotnet tool install -g Amazon.Lambda.Tools
    - name: Get build version
      run: |        
        $ref = "${env:GITHUB_REF}"
        $version = $ref.Substring($ref.LastIndexOf("/") + 2)
        echo "version=${version}" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append      
      shell: pwsh
    - name: Set version in CloudFormation
      working-directory: ./src/TheWorkBook.Identity
      run: find *.template -type f -exec sed -i ''s/#{ReleaseVersion}#/v${{ env.version }}/g'' {} \;
    - name: Set version in aws-lambda-tools-defaults
      working-directory: ./src/TheWorkBook.Identity
      run: find aws-lambda-tools-defaults.json -type f -exec sed -i ''s/#{ReleaseVersion}#/${{ env.version }}/g'' {} \;  
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal
    - name: Deploy to Lambda
      working-directory: ./src/TheWorkBook.Identity
      run: dotnet lambda deploy-serverless